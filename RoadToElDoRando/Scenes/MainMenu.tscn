[gd_scene load_steps=14 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]
[ext_resource path="res://Assets/UI/defaultTheme.tres" type="Theme" id=2]
[ext_resource path="res://Prefabs/UI/MainMenuOptionButton.tscn" type="PackedScene" id=3]
[ext_resource path="res://Scenes/MainMenu.gd" type="Script" id=4]
[ext_resource path="res://Scenes/menuOptionContainer.gd" type="Script" id=5]
[ext_resource path="res://Prefabs/UI/maskTransition.tscn" type="PackedScene" id=6]
[ext_resource path="res://Scripts/Misc/PressEnter.gd" type="Script" id=7]
[ext_resource path="res://Assets/Audio/waterloop.ogg" type="AudioStream" id=8]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
uniform int OCTAVE = 6;
uniform float mulscale = 5.0;
uniform float height = 0.6;
uniform float tide = 0.1;
uniform float foamthickness = 0.1;
uniform float timescale = 1.0;
uniform float waterdeep = 0.3;
uniform vec4 WATER_COL : hint_color =  vec4(0.04, 0.38, 0.88, 1.0);
uniform vec4 WATER2_COL : hint_color =  vec4(0.04, 0.35, 0.78, 1.0);
uniform vec4 FOAM_COL : hint_color = vec4(0.8125, 0.9609, 0.9648, 1.0);


float rand(vec2 input){
	return fract(sin(dot(input,vec2(23.53,44.0)))*42350.45);
}

float perlin(vec2 input){
	vec2 i = floor(input);
	vec2 j = fract(input);
	vec2 coord = smoothstep(0.,1.,j);
	
	float a = rand(i);
	float b = rand(i+vec2(1.0,0.0));
	float c = rand(i+vec2(0.0,1.0));
	float d = rand(i+vec2(1.0,1.0));

	return mix(mix(a,b,coord.x),mix(c,d,coord.x),coord.y);
}

float fbm(vec2 input){
	float value = 0.0;
	float scale = 0.5;
	
	for(int i = 0; i < OCTAVE; i++){
		value += perlin(input)*scale;
		input*=2.0;
		scale*=0.5;
	}
	return value;
}

void fragment(){
	float newtime = TIME*timescale;
	float fbmval = fbm(vec2(UV.x*mulscale+0.2*sin(0.3*newtime)+0.15*newtime,-0.05*newtime+UV.y*mulscale+0.1*cos(0.68*newtime)));
	float fbmvalshadow = fbm(vec2(UV.x*mulscale+0.2*sin(-0.6*newtime + 25.0 * UV.y)+0.15*newtime+3.0,-0.05*newtime+UV.y*mulscale+0.13*cos(-0.68*newtime))-7.0+0.1*sin(0.43*newtime));
	float myheight = height+tide*sin(newtime+5.0*UV.x-8.0*UV.y);
	float shadowheight = height+tide*1.3*cos(newtime+2.0*UV.x-2.0*UV.y);
	float withinFoam = step(myheight, fbmval)*step(fbmval, myheight + foamthickness);
	float shadow = (1.0-withinFoam)*step(shadowheight, fbmvalshadow)*step(fbmvalshadow, shadowheight + foamthickness * 0.7);
	COLOR = withinFoam*FOAM_COL + shadow*WATER2_COL + ((1.0-withinFoam)*(1.0-shadow))*WATER_COL;
	//COLOR = vec4(1.0,1.0,1.0,fbmval);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/OCTAVE = 6
shader_param/mulscale = 9.0
shader_param/height = 0.7
shader_param/tide = 0.1
shader_param/foamthickness = 0.1
shader_param/timescale = 1.0
shader_param/waterdeep = 0.3
shader_param/WATER_COL = Color( 0.04, 0.38, 0.88, 1 )
shader_param/WATER2_COL = Color( 0.04, 0.35, 0.78, 1 )
shader_param/FOAM_COL = Color( 0.8125, 0.9609, 0.9648, 1 )

[sub_resource type="Animation" id=6]
length = 0.001
tracks/0/type = "bezier"
tracks/0/path = NodePath("screen/Sprite:material:shader_param/position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/1/type = "value"
tracks/1/path = NodePath("menuOptionContainer:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="Animation" id=7]
resource_name = "fadein"

[sub_resource type="Animation" id=5]
resource_name = "fadeout"
length = 1.5
step = 0.03
tracks/0/type = "bezier"
tracks/0/path = NodePath("screen/Sprite:material:shader_param/in_out")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("screen/Sprite:material:shader_param/position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, -1.5, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1.35 )
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 1.44 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "next_scene"
} ]
}

[node name="MainMenu" type="Node2D"]
script = ExtResource( 4 )

[node name="Node2D" type="Node2D" parent="."]

[node name="Sprite" type="Sprite" parent="Node2D"]
material = SubResource( 2 )
position = Vector2( 970.633, 553.278 )
scale = Vector2( 30.824, 20.1476 )
texture = ExtResource( 1 )

[node name="PressEnter" type="RichTextLabel" parent="."]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = 657.0
margin_top = 454.0
margin_right = 1339.0
margin_bottom = 608.0
rect_clip_content = false
theme = ExtResource( 2 )
bbcode_enabled = true
bbcode_text = "[center][wave amp=40]Press Enter[/wave][/center]"
text = "Press Enter"
script = ExtResource( 7 )
menuOptionContainer = NodePath("../menuOptionContainer")

[node name="PressEnter" type="RichTextLabel" parent="PressEnter"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -341.0
margin_top = -77.0
margin_right = 341.0
margin_bottom = 77.0
rect_clip_content = false
theme = ExtResource( 2 )
bbcode_enabled = true
bbcode_text = "[center][wave amp=30]Press Enter[/wave][/center]"
text = "Press Enter"

[node name="menuOptionContainer" type="Node2D" parent="."]
visible = false
position = Vector2( 646, 208 )
script = ExtResource( 5 )

[node name="NewGame" parent="menuOptionContainer" instance=ExtResource( 3 )]
txt = "New Game"

[node name="Load" parent="menuOptionContainer" instance=ExtResource( 3 )]
margin_top = 244.0
margin_bottom = 398.0
txt = "Continue"

[node name="Exit" parent="menuOptionContainer" instance=ExtResource( 3 )]
margin_top = 549.0
margin_bottom = 703.0
txt = "Exit"

[node name="screen" type="Node2D" parent="."]

[node name="Sprite" parent="screen" instance=ExtResource( 6 )]

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 6 )
anims/fadein = SubResource( 7 )
anims/fadeout = SubResource( 5 )

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 8 )
autoplay = true

[connection signal="emit_clicked" from="menuOptionContainer/NewGame" to="." method="new_game"]
[connection signal="emit_clicked" from="menuOptionContainer/Load" to="." method="ready_fadeout"]
[connection signal="emit_clicked" from="menuOptionContainer/Exit" to="." method="exit"]
