[gd_scene load_steps=7 format=2]

[ext_resource path="res://Assets/UI/defaultTheme.tres" type="Theme" id=1]
[ext_resource path="res://Scenes/winScreen.gd" type="Script" id=2]
[ext_resource path="res://icon.png" type="Texture" id=3]
[ext_resource path="res://Assets/Audio/UI/misc_sound.wav" type="AudioStream" id=4]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
uniform int OCTAVE = 6;
uniform float mulscale = 5.0;
uniform float height = 0.6;
uniform float tide = 0.1;
uniform float foamthickness = 0.1;
uniform float timescale = 1.0;
uniform float waterdeep = 0.3;
uniform vec4 WATER_COL : hint_color =  vec4(0.04, 0.38, 0.88, 1.0);
uniform vec4 WATER2_COL : hint_color =  vec4(0.04, 0.35, 0.78, 1.0);
uniform vec4 FOAM_COL : hint_color = vec4(0.8125, 0.9609, 0.9648, 1.0);


float rand(vec2 input){
	return fract(sin(dot(input,vec2(23.53,44.0)))*42350.45);
}

float perlin(vec2 input){
	vec2 i = floor(input);
	vec2 j = fract(input);
	vec2 coord = smoothstep(0.,1.,j);
	
	float a = rand(i);
	float b = rand(i+vec2(1.0,0.0));
	float c = rand(i+vec2(0.0,1.0));
	float d = rand(i+vec2(1.0,1.0));

	return mix(mix(a,b,coord.x),mix(c,d,coord.x),coord.y);
}

float fbm(vec2 input){
	float value = 0.0;
	float scale = 0.5;
	
	for(int i = 0; i < OCTAVE; i++){
		value += perlin(input)*scale;
		input*=2.0;
		scale*=0.5;
	}
	return value;
}

void fragment(){
	float newtime = TIME*timescale;
	float fbmval = fbm(vec2(UV.x*mulscale+0.2*sin(0.3*newtime)+0.15*newtime,-0.05*newtime+UV.y*mulscale+0.1*cos(0.68*newtime)));
	float fbmvalshadow = fbm(vec2(UV.x*mulscale+0.2*sin(-0.6*newtime + 25.0 * UV.y)+0.15*newtime+3.0,-0.05*newtime+UV.y*mulscale+0.13*cos(-0.68*newtime))-7.0+0.1*sin(0.43*newtime));
	float myheight = height+tide*sin(newtime+5.0*UV.x-8.0*UV.y);
	float shadowheight = height+tide*1.3*cos(newtime+2.0*UV.x-2.0*UV.y);
	float withinFoam = step(myheight, fbmval)*step(fbmval, myheight + foamthickness);
	float shadow = (1.0-withinFoam)*step(shadowheight, fbmvalshadow)*step(fbmvalshadow, shadowheight + foamthickness * 0.7);
	COLOR = withinFoam*FOAM_COL + shadow*WATER2_COL + ((1.0-withinFoam)*(1.0-shadow))*WATER_COL;
	//COLOR = vec4(1.0,1.0,1.0,fbmval);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/OCTAVE = 6
shader_param/mulscale = 9.0
shader_param/height = 0.7
shader_param/tide = 0.514
shader_param/foamthickness = 0.274
shader_param/timescale = 1.0
shader_param/waterdeep = -4.057
shader_param/WATER_COL = Color( 0.592157, 0.0901961, 0.0235294, 1 )
shader_param/WATER2_COL = Color( 0.345098, 0.0313726, 0.0313726, 1 )
shader_param/FOAM_COL = Color( 0.8125, 0.9609, 0.9648, 1 )

[node name="LoseScreen" type="Node2D"]
script = ExtResource( 2 )

[node name="Node2D" type="Node2D" parent="."]
position = Vector2( -18, 18 )
scale = Vector2( 1.93278, 1.65403 )

[node name="Sprite" type="Sprite" parent="Node2D"]
material = SubResource( 2 )
position = Vector2( 514, 310 )
scale = Vector2( 16.5542, 12.5451 )
texture = ExtResource( 3 )

[node name="Label" type="Label" parent="."]
margin_left = 731.0
margin_top = 438.0
margin_right = 1190.0
margin_bottom = 659.0
theme = ExtResource( 1 )
text = "GAME OVER
"

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 4 )
volume_db = -10.0
autoplay = true
